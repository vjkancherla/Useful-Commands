
ON Linux, Find CPU and Memory Util for each process
ps -aux
ps fauxwww
vmstat
pmap <pid>
or go to /proc/<pid>/status
sar -u 5 10 - take a CPU sample every 5 seconds, do it 10 times (i.e monitor CPU for 50 seconds)
cat /proc/meminfo
cat /proc/partitions
grep MemTotal /proc/meminfo
grep "model name" /proc/cpuinfo
lshw
top and then [SHIFT+m - to sort by memory] [SHIFT+h - to ignore threads]

On Solaris,
prstat
pmap [process ID]
vmstat
prtdiag - display system diagnostic information
prtconf | grep -i "memory size"
prstat -m -n20 1 1
prstat -v -n20 1 1
prstat -mvL 1 1
pstack <pid>


to find total memory available on a Solaris box,
prtdiag

df -k [space allocated to partitions]
du -h [space occupied by current directory]

lsof - to find out which process is using what port
lsof -i :7777
sudo netstat -anp

root2:CU36VdPNQEKP:13285:0:99999:7:::
 |        |                             |        |   |        |
 1       2                           3       4  5       6

1.User name : It is your login name 
2.Password: It your encrypted password. The password should be minimum 6-8 characters long including special characters/digits 
3.Last password change (lastchanged): Days since Jan 1, 1970 that password was last changed 
4.Minimum: The minimum number of days required between password changes i.e. the number of days left before the user is allowed to change his/her password 
5.Maximum: The maximum number of days the password is valid (after that user is forced to change his/her password) 
6.Warn : The number of days before password is to expire that user is warned that his/her password must be changed 
7.Inactive : The number of days after password expires that account is disabled 
8.Expire : days since Jan 1, 1970 that account is disabled i.e. an absolute date specifying when the login may no longer be used 


netstat -an | grep .65.80 | grep ESTABLISHED | wc -l


crontab -l > cron_vjk
modify cron_vjk
crontab < cron_vjk

hostname <eus0000169> --- to set the hostname

On Solaris
/var/adm/messages --> admin messages
/var/cron/log --> cron logs

On Linux
/var/log/messages

for file in `find . -name \*.java` ; do ( ls -l $file; grep -i 'xml:stylesheet' $file ) done


Search for a piece of text in file update in the past 24 hours
for file in `find . -type f -mtime -1` ; do ( ls -l $file; grep -i 'orangeServices-JaxWs' $file ) done

On Windows, to access the C:\ drive of another computer -- go to run and type "\\smrtipslap904.smart421.com\c$"

Searching within VI for string 19/10/2007 - /19\/10\/2007 

To unjar -> jar -xf ./messaging.jar

To create a jar -> jar -cf ./messaging.jar ./com/ ./META-INF/ ./test/ ./testharness/

"Kill -9" equivalent in Windows - "tskill"

"ps -ef" quivalent in Windows - "taskinfo"

'grep'ing on windows - tasklist | findstr "cmd.exe"

find & replace in VI : replace "/as/" with "/as_usr/" - :%s/\/as\//\/as_usr\//gc

To run processes in background - nohup ./someScriptOrCommand.sh > logFile.txt 2>&1 &

On windows, to find open ports and the process id's associated with it is -- netstat -ao | findstr /i "listening"





----------------------

Batch Scripting : Wait For Process Termination
Posted by Frank-Peter Schultze on 24-Aug-2007 00:07 (2868 reads)

Sometimes, batch processing needs to be paused until a process (a setup program for example) is terminated. If the START /WAIT command does not meet the requirement I use TASKLIST.EXE in order to figure out if a process is running. TASKLIST.EXE is an external command in Windows XP Professional and Windows Server 2003. It displays a list of processes and services with their Process ID (PID) for all tasks. Using a filter you can query a specific process.


The batch code below shows how to check every 5 seconds if the current user is running msiexec.exe:

START /WAIT a-setup-program.exe
:Loop
tasklist.exe /FI "USERNAME eq %USERDOMAIN%\%USERNAME%" /FI "IMAGENAME eq msiexec.exe" 2>NUL | find.exe /i "msiexec.exe" >NUL || GOTO Continue
ping -n 6 127.0.0.1 >NUL
GOTO Loop
:Continue
----------------------------------


find . -name *.log -exec ls -l {} \;

wsadmin.sh -port 8880 -f tracespec.jacl *=fine
wsadmin.sh -port 8881 -f tracespec.jacl *=fine
wsadmin.sh -port 8882 -f tracespec.jacl *=fine


In PLC access logs, to search for total http requests in a minute -
for 10:20 - grep "03/Dec/2008:10:200*" ./tmp1.log | wc -l
for 10:22 - grep "03/Dec/2008:10:220*" ./tmp1.log | wc -l


Printing the last line in a file using SED - sed -n '$,$ p' < pmap.txt
"         "    "   "    " " file using TAIL - cat pmap.txt | tail -1  OR pmap 25123 | tail -1

ON Linux, to find what files are taking up most space - du -k | sort -rn | head -25


To find out what/who is using/opened a file.
[root@eul0001043 custuser]# fuser /var/opt/activity_log/web_mvc/plc-activity-log.log
/var/opt/activity_log/web_mvc/plc-activity-log.log: 12472
[root@eul0001043 fd]# ls -l /proc/12472/fd | grep <name of the file>
l-wx------    1 oracle   oinstall       64 Mar 17 22:35 20 -> /var/opt/activity_log/web_mvc/plc-activity-log.log


****************
on linux servers (for PLC) to find information regarding a process, for e.g., what are all the jar files loaded by the process (you can also use PMAP), or what are the ports that it is using, or what are the files that it has opened -

lsof -p <pid>
*************************************************


get line number for the start time and end time as follows
grep -n "2008-12-16 22:10:00" ./plc-www-20081216.log | cut -d ":" -f 1
then
768523
770273
sed -n '768523,770273 p' ./plc-www-20081216.log


using sed to copy from a specific line to the end of the file
sed -n '768523,$ p' ./plc-www-20081216.log

To use variables in sed
sed -n ''$START_LINE','$END_LINE' p' ./plc-www-20081216.log

To split a file in 50m chunks
split -b 50m ./native_stdout.log



TOP in batch mode i.e, if we want to send the output to a file

top -b --> in batch mode

top -bn1 --> in batch mode, one iteration

top -bn1M --> in batch mode, one iteration, with memory stats

top -bn1MH --> in batch mode, one iteration, with memory stats, don't show threads




How to profile memory in linux - /my documents/unix tips/


Per Process Memory Usage (in linux)
ps -eo pid,ppid,rss,vsize,pcpu,pmem,cmd -ww --sort=pid

To see only the memory resources occupied by each category of processes, such as Apache httpd, MySQL mysqld or Java, use the following command:
ps aux | awk '{print $4"\t"$5"\t"$6"\t"$11}' | sort | uniq -c | awk '{print $3"\t"$4"\t"$5}' | sort -nr


To find out how long a system has been up -
uptime

to display information about the currently logged in user -
w (yes, just the letter "w")


To find files that were modified in the past 24 hrs
find ./ -mtime -1

To find files that were modified after a specific time e.g., say 13:00
touch -t `date +%m%d1300` /tmp/t.txt
find ./ -type f -newer /tmp/t.txt

Doing the same thing as above, but iteratively
for file in `find ./ -type f -newer /tmp/t.txt` ; do ( ls -l $file ) done


To analyse core dumps on solaris use "mdb" and then type in "::status" "::stack" "::reg". Also look at mdebug script from sun.

To search for a string/pattern with in a zipped file
zcat /file.gz | grep string
zgrep 'value to find' filename.gz


to delete files older that 30 days
find /opt/IBMIHS/logs/accessLogs -mtime +30 -exec ls -l {} \;
find /opt/IBMIHS/logs/errorLogs -mtime +30 -exec rm -rf {} \;

if you want confirmation before deleting the file
find . -name "*.gz" -mtime +60 -ok rm -rf {} \;

To find files create between a date range
o2hp107 - /tmp/vjk-> touch -t 201203010000 range_end
o2hp107 - /tmp/vjk-> touch -t 201108010000 range_start
o2hp107 - /tmp/vjk-> find /temp/gc -type f -newer range_start ! -newer range_end | xargs ls -lrt

How much memory is in the box? (all UNIX, OpenVMS)
Solaris
dmesg | grep mem
prtdiag | grep Memory
prtconf -v | grep Memory
AIX
bootinfo -r
lsattr -E1 sys0 -a realmem
getconf REAL_MEMORY
HPUX
dmesg | grep Physical
/opt/ignite/bin/print_manifest | grep Memory
machinfo | grep Memory
Linux
dmesg | grep Memory
grep -i memtotal /proc/meminfo
free


IF you want history on solaris - use BASH

To get the PID without leading spaces
_109aPID=`ps -ex | grep java | grep 109[a] | cut -c1-6 | sed -e 's/^[ \t]*//'`

On solaris, to get the operating system version info
uname -a
less /etc/release

On Linux, , to get the operating system version info
cat /etc/redhat-release

On Ubuntu, to get the operating system version info
lsb_release -a

use the following commands to compare files on unix
cksum
md5sum

to find the full arguments list on Solaris when "ps -ef" is not sufficient
pargs <pid>

And on Linux
tr '0' '\n' < /proc/<PID>/cmdline


How to tell if Java is 32 or 64 bit
java -d64 -version

how to tell if apache is 32 or 64 bit
httpd -V


running dos2unix for all files in a directory
for f in *; do [[ -f $f ]] && dos2unix "$f" "$f"; done

running dos2unix recursively -
find . -type f -exec dos2unix {} {} ';'


In VI, to copy and paste mutiple lines -

To copy a group of 'n' consecutive lines, use 'yy' and 'p'.

For example, to copy 4 lines (in command mode):

1. Move the cursor to the first line to be copied.
2. '4yy'
3. Move cursor to the destination.
4. 'p'


for file in `find . -name wls_prod_soa\*.out -mtime -1` ; do ( grep FabricInvocationException $file | grep endpoint | tail -f ) done

find . -name "Admin*" -mtime -1 -exec grep -i outofmemory {} \;

Remove all spaces in the output and get the substring from character 47 to the end.
./getThroughputForAllServers.sh | grep -w "Throughput " | sed 's/ //g' | cut -c47-0


find . -name "o2*" -mtime -1 -exec grep STUCK {} \; | grep BEA-100049


to search for files created between 09OO 27mar2012 and 2300 27mar2012

o2hp107 - /tmp/vjk-> touch -t 201203270900 range_end 
o2hp107 - /tmp/vjk-> touch -t 201103272300 range_start

find . -name "o2hp109c.log*" -newer range_start ! -newer range_end | xargs grep STUCK| grep BEA-100049 | grep BST



to do a find replace in shell. The follwoing replaces the the string "</" with nothing. (sed 's/old_strng/new_Streing/g')
cat formatted_http.txt | sed 's/\<\///g'


to view line number in VI
:set nu


Copying with xargs
find . -type f -ctime -1 | xargs -I {} cp {} /some/other/directory


Grepping for multiple strings at once -

egrep "string1|string2|string3" ./file_name


To find total physical memory on a HP-UX server
machinfo | grep -i memory


On any system, find the most memory consuming process 
 ps -elf | sort -n -k 10,10
 
  
To Check if a port is open and we can connect to it with out telnet 
nc -vz <host> <port>
eg : check connectivity to 172.32.52.254 on port 8583 and timeout in 2 seconds -
nc -v -w 2 172.32.52.254 -z 8583 | grep succeeded


To search for a specific class in JAR files
find . -name "*jar" -print -exec jar -tf '{}' \; | grep -E "jar$|AggregratedIDSAdapter" 


Checking SSL connectivity (One way) using WGET
wget --no-check-certificate --certificate=/opt/ur/certs/telefonica\@prd.hsntech.com.pem https://tesuat3:8189/order/orderService?wsdl

Adding a group
groupadd capache

Adding a User
useradd -s /bin/bash -m -d /home/capache -g capache vkancherla

Create a PAssword for the new user
passwd vkancherla

Removing a user (along with user's home dir)
userdel -r ekmbtrrid

Change a user's home dir
usermod -m -d /home/custuser custuser

Checking SSL connectivity with CURL
curl -v --trace trace.log --cert ./client_cert.pem --cert-type PEM --key ./client_private_key.pem --key-type PEM --pass h5nsm@rt421 'https://tmprd-db.hub.hsntech.com:443/order/orderService?wsdl'
 
Zipping up a folder on Linux
zip -9 -r <zip file name> <directory to zip>

USing the find command and force it to traverse through symlinks
find -L /var/www/ -name "trust4g.png"

Install an RPM package
rpm -ivh <package name>

Uninstall an RPM package
rpm -e --noscripts <package name>

Verify server certificate using openssl
openssl s_client -showcerts -connect ws.tescomobileservices.com:443

View details of a certificate in PFX format (as opposed to PEM)
openssl pkcs12 -info -in ./apis.stg.tescomobile.com.pfx
Or
keytool -v -list -keystore apis.stg.tescomobile.com.pfx.txt -storetype pkcs12

NOTE:: In Java, You can use *.p12 file just like you would a *.jks. You can load it in to key store explorer too. Use the following options--
%JAVA% -Djavax.net.ssl.keyStore=C:\Tesco\Smart421\smart421@prd.hsntech.com.p12 -Djavax.net.ssl.keyStorePassword=h5nsm@rt421 -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.debug=SSL -jar SSLPoke_with_wget.jar tmprd-db.hub.hsntech.com 443

If you have a *.p12 and want to extract the CACert, client cert and the private Key -
openssl pkcs12 -in MULTICERT.p12 -out ca.pem -cacerts -nokeys 
openssl pkcs12 -in MULTICERT.p12 -out client.pem -clcerts -nokeys 
openssl pkcs12 -in MULTICERT.p12 -out key.pem -nocerts 
For the last command, use the same password as the p12

View details of p12 file using keytool
keytool -v -list -kesytore smart421@prd.hsntech.com.p12 -storetype pkcs12

Convert P12 to JKS
keytool -importkeystore -srckeystore smart421@prd.hsntech.com.p12 -srcstoretype pkcs12 -srcalias 1 -srcstorepass h5nsm@rt421 -destkeystore sop-ja.keystore.jks -deststoretype jks  -destalias smart421-key -deststorepass wNTB75dJsYu9b4f

Change Alias of a cert in a JKS
keytool -changealias -keystore test.jks -alias <SOURCE_ALIAS> -destalias coco_identity_cert

To locate a executable on Linux
locate wget

To test apache configuration
httpd -t

Display the contents of a PEM file using OpenSSL
openssl x509 -in telefonica\@prd.hsntech.com.pem -text

Display the contents of a CER file using OpenSSL
openssl x509 -inform pem -in cerfile.cer -noout -text
or
openssl x509 -inform der -in cerfile.cer -noout -text

Convert a PEM to CRT
openssl x509 -outform der -in your-cert.pem -out your-cert.crt

Convert a DER to PEM
openssl x509 -inform DER -outform PEM -text -in der-certificate-file -out pem-certificate-file

To make a file/folder immutable (and otherwise) on linux
chattr +i file_name
chattr -i file_name
chattr -R +i ./folder_name
chattr -R -i ./folder_name

To zip up all files in the current dir older than 1 day
find . -type f -mtime -1 -exec gzip "{}" \;

To move all files in the current dir older than 1 day
find . -type f -exec mv "{}" /temp/logs \;

To Run a command indefinitely, sleeping for 1 second
while true; do netstat -an | grep 10.174.128.156; sleep 1; done

To find files that were updated in the past 4 hours
find . -type f -mmin -240

For loop from command line, to read the contents of a file and search another file based on each line
for i in `cat exp1.log`; do grep $i rjis-proxy.log; done > exp2.log

Posting XML data to o2 SOA using CURL
[ur@373472-stagebatch1 certs]$ pwd
/opt/ur/certs
[ur@373472-stagebatch1 certs]$ curl -v --trace trace.log --header "content-type: text/xml" -X POST -d @sms.xml --cert ./client.pem --cert-type PEM --key ./key.pem --key-type PEM --pass tmobile 'https://sdpapi.ref.o2.co.uk/services/SendMessage_1_1'

du -h | egrep "0G|1G|2G|3G|4G|5G|6G|7G|8G|9G" | sort -n

du -h | egrep "0M|1M|2M|3M|4M|5M|6M|7M|8M|9M" | sort -n

from command line read lines from a file
while read line; do echo $line; done < files.txt

Write a list of commands you want to execute in to a file. Now, to execute each command using while -
while read line; do `$line`; done < files.txt

For loop from command line, executing multiple commands
for file in `find . -name "Debug.log*"`; do ls -l $file; zgrep -a "^00:" $file | grep -a getMessageHeader | wc -l; done

Using AWK to read substrings
Here, we are finiding the line containing "tenured" keyword, and then print the 3rd token and replace and commas in the token with blank
--------
tail -10 sender_GC_15-08-2014.log | grep -a1 tenured | tail -1 | awk '{print $3}' | sed 's/,//g'
--------
e.g : the space 5476K,  61% used [0xeb610000, 0xeb954618, 0xeb954800, 0xebb69000)
the above command will return 5476K

Getting only unique results whilst searching for things
cat insight_ur_customer_extract_20140909-211657.dat | awk -F '|' '{print $18}' | sort -n| uniq -c

Use keytool to analyse java JKS
keytool -v -list -keytore cacerts

Grep with regex to search for 5 digits exactly (in access.log)
grep -P '[0-9]{6}' only_posts.txt | awk  '{print $4 $5, $11}'

Find out what port is being used by what process
netstat -plan | grep :80

To see number of IP connections and IPs connected to port 80, use the following command.
netstat -plan|grep :80|awk {'print $5'}|cut -d: -f 1|sort|uniq -c|sort -nk 1

In access log to find
a) only POST requests
b) get the time taken for the request to complete and convert it from micro-seconds to seconds
c) ignore anything after decimal point
d) exactly two digits
e) the two digits must be between 20 and 99
grep -w POST ./portal-access_log |  awk '{print $11/1000000}' | cut -d. -f 1 | grep -e "[0-9][0-9]" | grep -e "^[2-9]"
grep -w POST ./portal-access_log |  awk '{print $11/1000000}' | cut -d. -f 1 | grep -e "[0-9][0-9][0-9]" | grep -e "^[1-9]"


grep "11/Nov/2014:13:53" ./portal-access_log | awk '{print $11/1000000,$1, $4, $5, $7}' | grep -e "[0-9][0-9]" | grep -e "^[2-9]"
grep "16/Jan" portal-access_log | awk '{print $11/1000000,$1, $4, $5, $7}' | grep -e "^[0-9][0-9][0-9]" | grep -e "^[1-9]" | grep -v find-order | sort -n

To view full start up parameters or arguments for a command or process on HP-UX
ps -elfx

SSH putty tunnel chaining
eg. you need to connect to, from your laptop, to M2M UAT DB, which sits behind a bastion (and there is no conneciton to db server on port 1521 from bastion)
For this, you will have to create a tunnel from your laptop to bastion. Then, another tunnel from bastion to m2m db.
First, in putty, setup a tunnel as -> source:1521 destination:localhost:1521 . This means that all conns on 1521 on laptop will be forwarded to bastion's local port 1521
Next, once on bastion, log in to m2m db as follows ->
ssh -v -L 1521:m2mdbuat.m2m-aws.co.uk:1521 m2mdbuat.m2m-aws.co.uk . This means that all conns on port 1521 on bastion will be forwarded to m2m db on port 1521.

To check user log in activity on linux
$last <username>

To get the network interfaces and ip addresses on HP-UX server
netstat -in

Print data and time in bash
echo " Time now is : `date +'%d/%m/%Y %T'` "

To automatically start up a service (e.g apache) on server start up
chkconfig --level 2345 httpd on

to see what clients are hitting your box:
netstat -tpu | grep EST

To see what the default JVM options are:
java -XX:+PrintFlagsFinal -version | grep HeapSize

To convert bash date to a format we want
date +"%d-%b-%Y"
25-Sep-2015

To find the average response time for a particular date from apache access logs
grep `date +"%d/%b/%Y"` tmp.log | awk '{print $13}' | awk '{sum+=$1; ++n} END {print "Tot="sum"("n")";print "Avg="sum/n}'

To truncate a log file that is currently being used
sudo cat /dev/null > gc.log

GZip'ing all logs older than 3 days
for file in `find . -type f -mtime +3`; do sudo gzip $file; done

Finding all ports being used by a process/PID
lsof -Pan -p 22099 -i


# VKancherla (17Jun2014): check connectivity between SI and MAR, every 30 seconds.
# NOTE: because CRON's granularity only goes down to a minute, to schedule a task
# to run every 20 secs, we need to have three entries for the same script, and delay
# the execution of the invocations 20 secs after each other.
# === START ===
* * * * * /home/sisms/monitoring-scripts/checkConnectivityToSmsc.sh
* * * * * ( sleep 20 ; /home/sisms/monitoring-scripts/checkConnectivityToSmsc.sh )
* * * * * ( sleep 40 ; /home/sisms/monitoring-scripts/checkConnectivityToSmsc.sh )
# === END ===

To search the log backwards for a specific time. Eg: to search for errors over the past two hours
awk -vDate=`date -d'now-120 minutes' +%H:%M:%S` ' { if ($2 > Date)  print $0 }' ${log} | grep -e "^[2][0][1-9]" | egrep -i "Exception|error|outofmemory"

Printing date in a format you want
echo `date +%b" "%d" "%H:%M:%S`
Dec 11 12:22:21

To check public certificates
https://www.ssllabs.com/ssltest/analyze.html

Convert Private Key to PEM
openssl rsa -in domain.key -text > domain.pem

To convert non-X509 to pem
openssl x509 -in public_key.pem -inform DER -out public_keyy.pem -outform PEM

To copy files listed by the FIND command
find /path/to/search/ -type f -name "regular-expression-to-find-files" | xargs cp -t /target/path/

If you get the following error while trying to SSH to a server
Received disconnect from 52.49.252.179: 2: Too many authentication failures for ec2-user
then, use the following commands
ssh-add -l to list the agent's keys, ssh-add -D to clean out all cached keys

Rsync : As simple as below
a. enable no-pwd login from the destination dir to source dir.
b. Run this command on dest server (to PULL data from source server) - rsync -rtvu --delete-delay fmadev@192.168.64.62:/tmp/webB/* /tmp/webA/
Note: --delete-delay switch will ensure that files that are deleted are synced across too.
Note: You can also PUSH data to the source server, i.e., literally making the dest server as the source server
c. Add an entry in cron to run the command at required frequency
For two way Rsync, repeat above steps on the source server too.

In Bash, to print a counter in the same place
secs=$((5 * 60))
while [ $secs -gt 0 ]; do
   echo -ne "$secs\033[0K\r"
   sleep 1
   : $((secs--))
done

++++++++
In Bash, to display a busy counter
/usr/bin/scp me@website.com:file somewhere 2>/dev/null &
pid=$! # Process Id of the previous running command

spin='-\|/'

i=0
while kill -0 $pid 2>/dev/null
do
  i=$(( (i+1) %4 ))
  printf "\r${spin:$i:1}"
  sleep .1
done
+++++++


To encrypt a file using Open GPG (https://www.madboa.com/geek/gpg-quickstart/)
First, download and install opengpg. Then create your own private key. Use cmd - "gpg --list-keys" to list all key. 
In order to encrypt a file and send it to someone else, you will need the other persons public key.
Request the other person to send their public key. Once received, add it to your keychain (use the GUI - GPG Keychain). 
The other persons pub key contains a name value, usually the name of the person. You will use this name to encrypt the file.
Run this command to encrypt the file - gpg --encrypt --recipient "Szymon Bakowski" ./Environment_Security_Details_v0.4.xlsx

Zipping up a folder and compressing the contents using tar
tar -zcvf archive.tar.gz directory/

Ubuntu / Amazon Linux version info
cat /etc/issue

To reverse search
CTRL+R and then type what you want to search

USE AWS SHELL
type - aws-shell

To open SSH console
Once the Bastion terminal is launched, do the following
a. hit enter
b. then, first type [SHIFT]+~ and then [SHIFT]+c
YOu will see the SSH console


To login as another user eventhough that user has option set to not be able to login
su -s /bin/bash <username>

If you are seeing the following error with ScaleFT -
"Unable to authenticate the <bastion server host name>"
Then, run -
ssh-keygen -R pbast.lon3.corp.rackspace.net

Using scaleFT to log in to a target server via bastion
sft ssh -via <InstanceID of bastion> <instanceID of target server>
sft ssh -via i-d26808ca i-51b45cc5

STF logging
export SFT_DEBUG=true

Additionally, the logging data output by the above flag is always captured whether the flag is set or not, at the path ~/Library/Logs/ScaleFT/sft/

to find your internet IP from command line
curl ifconfig.co


To fix "Received disconnect from 10.9.76.134: 2: Unable to receive signed key from ssh agent"
ssh-add

Listing/removing a bunch of packages on RHEL/Amazon/Centos
list packages to uninstll -> rpm -qa | grep php | xargs echo
start yum shell -> yum shell
>remove <list of packages from ECHO above>
>ts
>ts solve
>ts run
>exit

To force overwrite a file while doing a CP
/bin/cp source_file dest_file
or
\cp source_file dest_file

If you are seeing following error whilst using ScaleFT -
"Ncat: Connection timed out.
error: ssh: handshake failed: EOF
ssh: handshake failed: EOF
ssh_exchange_identification: Connection closed by remote host"
MAKE SURE that you are using the correct Rackspace BAstion in Passport


Using CURL to get request details
curl -I faomedia.corrastage.com -L

List block devices (EBS volumes) on linux
lsblk

In Unix, to find out how long a command takes to execute, for example a CURL command-
time curl http://localhost:8080

"Jailed" SFTP user
https://one.rackspace.com/display/Linux/Configuring+a+Chrooted+SFTP-Only+User

ScaleFT local DIR
/Users/vija0326/Library/Application Support/ScaleFT

SCP over ScaleFT
scp -o "ProxyCommand sft proxycommand <target-server-instance-id> --via <bastion-instance-id>" <target-server-instance-id>:/tmp/ngnix_502_errors.log .
scp -o "ProxyCommand sft proxycommand i-03b6891b66e6b16b8 --via i-08d4ffd0a43b0c5d4" i-03b6891b66e6b16b8:/tmp/ngnix_502_errors.log .

sft config rdp.screensize 1024x768

***
With this “-via” option, we can jump into a host that has direct RDS access (e.g. UI-001 in our test here) and forward 3306 on from that point instead of from the Passport host.

The sample command was:
sft ssh -L 33061:productionpoc-iiqcms-aurora-01-20190307221440042800000012.cn5e5xdevv31.us-west-1.rds.amazonaws.com:3306 -via i-0d0a942dbccffe205 i-04e5b31bc1f62fabd

i-0d0a942dbccffe205 -> Passport host bastion (cannot reach RDS host)
i-04e5b31bc1f62fabd -> UI-001 (which can access the RDS host)

Then we fire up MySQL Workbench locally and use our same 127.0.0.1:33061 connection with our DB admin credentials to access RDS via the UI-001 host via the Passport host.
***

CURL bypass load balancer
curl --verbose --header 'Host: www.example.com' 'http://10.1.1.36:8000/the_url_to_test'


If Iphone constantly connects and reconnects on Mac
sudo killall -STOP -c usbd 

To test remote connections from Windows command line
Test-NetConnection beehive-portal.pr.gdlaws.nl -Port 443

get SSH key from param store
aws ssm get-parameters --names "/bee-mon/secrets/ec2_private_key"  --with-decryption --query "Parameters[*].{Value:Value}" --output text --region=eu-central-1

Login to a Windows EC2 using Linux bastion
-- spin up a linux bastion in the public subnet
-- create a new SG with SSH ingress from RAX office, plus an ingress rule to allow all connection within the SG
-- assign SG to bastion
-- from MacBook - ssh -i <pem> ec2-user@bastion-public-ip
-- open SSH console 
a. hit enter
b. then, first type [SHIFT]+~ and then [SHIFT]+c
YOu will see the SSH console
-- setup tunnelling -> -L 3389:<target-windows-ip>:3389
-- From MacBook, open Royal TSX and RDP to localhost:3389

On MacOS, to capture bash output to the clipboard
ls | pbcopy  --> this puts the output from ls on the clipboard/pasteboard
pbpaste > ls.txt --> writes from clipboard to a file

Read from 2 files simultaneously
while read line1 <&3 && read line2 <&4; do terraform state mv "$line1" "$line2"; done 3<src.txt 4<dest.txt

Looping and incrementing
q=0; while [[ q -lt 20 ]]; do ((q++)); terraform state mv "module.alb.module.alb.aws_lb_listener_certificate.https_listener[$q]" "module.alb.aws_lb_listener_certificate.https[$q]" ; done

SETTING PATH
echo 'export PATH="/usr/local/sbin:$PATH"' >> ~/.zshrc

BREW DIAGNOSTICS
brew doctor

Delete all .terraform directories
find . -name ".terraform" -exec rm -rf {} \;
 
AWS CLI with Queries / Filters (Client-Side Filter)
aws ec2 describe-snapshots --owner-ids self --region ${region} --query "Snapshots[?StartTime<'${TODAY_MINUS_35}'].[SnapshotId, StartTime]" --output text > ${TMP_FILE}
aws ec2 describe-snapshots --owner-ids self --region ${region} --query "Snapshots[*].SnapshotId" --output text | awk "{print NF}"
aws backup list-backup-plans --region ${region} --query "BackupPlansList[*].BackupPlanName" --output text
aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId]

Find the "Platform(OS)" for only STOPPED instanced
aws ec2 describe-instances --filter "Name=instance-state-name,Values=stopped" --query 'Reservations[*].Instances[*].[InstanceId,Platform]' --output text

AWS CLI Adding labels to identifier values to make the output easier to read
aws ec2 describe-volumes \
    --query 'Volumes[].{VolumeId: VolumeId, VolumeType: VolumeType, InstanceId: Attachments[0].InstanceId, State: Attachments[0].State}'

Shell, Tokenize string, for immediate processing using For loop
echo "toolstation-pre-prod-gke-nodes,#N/A,pre-prod,gke,2,active,gke" | tr "," "\n"

Shell, Tokenize string and store in array
an_array=($(echo "toolstation-pre-prod-gke-nodes,#N/A,pre-prod,gke,2,active,gke" | tr ',' "\n"))
echo "${an_array[1]}"

To print how long a command as taken to run
sudo /usr/bin/time --format='%C took %e seconds' /snap/bin/gsutil -m rsync -r ${directory} ${bucket}/public

To return a string a shell function
a_test()
{
  echo "ret_val"
}
a_var="$(a_test)"


pip3 install -r requirements.txt

Using CURL to connectivity to remote port
curl -v telnet://127.0.0.1:22

Print AWS CLI output to STDOUT, use --no-cli-pager
aws ssm get-patch-baseline --region eu-central-1 --no-cli-pager \
    --baseline-id "pb-0a18d931785031a82"

If you need to scp / upload file onto an EC2 instance, then the easiest thing to do is
1. upload the file to an s3 bucket
2. create a s3 signed url for the file
3. download the signed url from the EC2 instance. Use -> wget -O config.zip "<signed url>"

watch -n 10  kubectl top pods --containers -n nifi

find . -type d -name ".terraform" -exec rm -rf "{}" \;

###k8s docker image with basic troubleshooting tools###
kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot

---
apiVersion: v1
kind: Pod
metadata:
  labels:
    fargate: "true"
  name: netshoot
  namespace: apiiro
spec:
  containers:
  - command:
    - sh
    - -c
    - tail -f /dev/null
    image: nicolaka/netshoot
    name: netshoot
    resources: {}
---


for nsp in `k get ns | egrep "\-cpui" | awk '{print $1}'`; do echo "--- $nsp ---"; kubectl -n $nsp delete --force "$(kubectl api-resources --namespaced=true --verbs=delete -o name | tr "\n" "," | sed -e 's/,$//')" --all; kubectl delete --force  ns $nsp; done


In Terraform, if Data sources are forcing replacement even though nothing has changed, then run -
>> terraform refresh


name = substr("farm-to-${each.value.name}", 0, min(length("farm-to-${each.value.name}"), 21))

GDU: Fast disk usage analyzer with console interface written in Go
gdu ~

